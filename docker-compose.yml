version: '3.1'

services:
  # nginx:
  #   build:
  #     context: .
  #     dockerfile: nginx/Dockerfile
  #   ports:
  #     - "7080:80"
  #   networks:
  #     - internal
  #   volumes:
  #     - ./player/:/var/www/html/
  #     - ./logs/nginx:/var/log/nginx/
  #   container_name: nginx

  openlitespeed:
    build:
      context: .
      dockerfile: openlitespeed/Dockerfile
    ports:
      - "7080:80"
    networks:
      - internal
    volumes:
      - ./player/:/var/www/vhosts/localhost/html
    container_name: openlitespeed

  # php:
  #   build:
  #     context: .
  #     dockerfile: php/Dockerfile
  #   networks:
  #     - internal
  #   volumes:
  #     - ./player/:/var/www/html/
  #     - ./logs/php.log:/var/log/fpm-php.www.log
  #   container_name: php

  db:
    image: mysql:8.1.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
    volumes:
      - ${DB_PATH_HOST}:/var/lib/mysql
    networks:
      - internal
    container_name: db

  adminer:
    build:
      context: .
      dockerfile: adminer/Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - internal
    container_name: adminer

  composer:
    image: composer:2.5.8
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}
    command: composer install
    container_name: composer

  node:
    image: node:18.16.0-alpine
    volumes:
      - ./player/:/var/www/html/
    working_dir: ${APP_PATH_CONTAINER}
    command: >
      sh -c "chmod -R 777 storage &&
            npm install &&
            npm run build"
    container_name: node

  redis:
    image: redis:7.2.1-alpine
    hostname: redis
    networks:
      - internal
    container_name: redis

  phpRedisAdmin:
    image: erikdubbelboer/phpredisadmin:1.19
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
    ports:
      - 80:80
    networks:
      - internal
    container_name: phpRedisAdmin

networks:
  internal:
    driver: bridge
